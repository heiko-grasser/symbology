(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{364:function(e,t,r){"use strict";r.r(t);var a=r(44),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"development"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[e._v("#")]),e._v(" Development")]),e._v(" "),r("p",[e._v("This module is a C++ wrapper around the "),r("a",{attrs:{href:"https://github.com/zint/zint",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zint barcode library"),r("OutboundLink")],1),e._v(". The version of zint that will be used will be determined by the git reference stored in the "),r("code",[e._v("zintVersion")]),e._v(" field of "),r("code",[e._v("package.json")]),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"source-code-management"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#source-code-management"}},[e._v("#")]),e._v(" Source code management")]),e._v(" "),r("p",[e._v("Upon installation of dependencies ("),r("code",[e._v("yarn install")]),e._v("), a copy of the Zint source repo will be cloned in the Git-ignored "),r("code",[e._v(".zint")]),e._v(" directory, and its relevant C source files are referenced in "),r("a",{attrs:{href:"https://github.com/jshor/symbology/blob/master/binding.gyp",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("binding.gyp")]),r("OutboundLink")],1),e._v(", along with "),r("a",{attrs:{href:"https://github.com/jshor/symbology/blob/master/src/binding/main.cpp",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("src/binding/main.cpp")]),r("OutboundLink")],1),e._v(". The compiled "),r("code",[e._v(".node")]),e._v(" module is then available for use by the JavaScript source, in "),r("a",{attrs:{href:"https://github.com/jshor/symbology/blob/master/src/index.js",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("src/index.js")]),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("Once "),r("code",[e._v(".zint")]),e._v(" is created, the same install script will then apply a small number of patches to some Zint source files to adapt it to the following needs:")]),e._v(" "),r("ul",[r("li",[e._v("Add "),r("code",[e._v("rendered_data")]),e._v(" as a char array to be populated with raw string output.")]),e._v(" "),r("li",[e._v("Update "),r("code",[e._v("svg.c")]),e._v(" and "),r("code",[e._v("ps.c")]),e._v(" to write to the "),r("code",[e._v("rendered_data")]),e._v(" buffer instead of "),r("code",[e._v("stdout")]),e._v(".")]),e._v(" "),r("li",[e._v("Replace "),r("code",[e._v("malloc.h")]),e._v(" references with "),r("code",[e._v("stdlib.h")]),e._v(" for cross-compatibility.")])]),e._v(" "),r("p",[e._v("See "),r("a",{attrs:{href:"https://github.com/jshor/symbology/blob/master/scripts/install.js",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("scripts/install.js")]),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://github.com/jshor/symbology/blob/master/scripts/patches.js",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("scripts/patches.js")]),r("OutboundLink")],1),e._v(" for more info.")]),e._v(" "),r("h2",{attrs:{id:"utilization-of-nan"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#utilization-of-nan"}},[e._v("#")]),e._v(" Utilization of Nan")]),e._v(" "),r("p",[e._v("This project utilizes "),r("a",{attrs:{href:"https://github.com/nodejs/nan",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nan"),r("OutboundLink")],1),e._v(" to make the project backwards-compatible and make bindings future-proof.")]),e._v(" "),r("h2",{attrs:{id:"building-the-project"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#building-the-project"}},[e._v("#")]),e._v(" Building the project")]),e._v(" "),r("p",[e._v("Builds are created using "),r("a",{attrs:{href:"https://github.com/mapbox/node-pre-gyp",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("node-pre-gyp")]),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("Upon installation of dependencies, "),r("code",[e._v("node-pre-gyp build")]),e._v(" will be run, which will compile the project from source.")]),e._v(" "),r("h3",{attrs:{id:"building-on-windows"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#building-on-windows"}},[e._v("#")]),e._v(" Building on Windows")]),e._v(" "),r("p",[e._v("If you're using Windows (excluding "),r("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/wsl/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WSL"),r("OutboundLink")],1),e._v("), then you'll need to install "),r("a",{attrs:{href:"https://github.com/felixrieseberg/windows-build-tools#windows-build-tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("windows-build-tools"),r("OutboundLink")],1),e._v(" to compile the native Node module.")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --global --production windows-build-tools --vs2017\n"),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" config "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("set")]),e._v(" msvs_version "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("2017")]),e._v(" â€“global\n")])])]),r("p",[e._v("This install takes a while, but once it's complete, you can move on to "),r("a",{attrs:{href:"#creating-a-build"}},[e._v("Creating a build")]),e._v(" below.")]),e._v(" "),r("h3",{attrs:{id:"creating-a-build"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-build"}},[e._v("#")]),e._v(" Creating a build")]),e._v(" "),r("p",[e._v("To create a packaged build, run:")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" package:binary\n")])])]),r("h3",{attrs:{id:"running-tests"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#running-tests"}},[e._v("#")]),e._v(" Running tests")]),e._v(" "),r("p",[e._v("Tests are written as "),r("code",[e._v("*.test.js")]),e._v(" and utilize "),r("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jest"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("Both "),r("strong",[e._v("unit")]),e._v(" and "),r("strong",[e._v("e2e")]),e._v(" tests are written for this project. To run all tests:")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v("\n")])])]),r("h4",{attrs:{id:"unit-tests"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unit-tests"}},[e._v("#")]),e._v(" Unit tests")]),e._v(" "),r("p",[e._v("Unit tests are specified in the "),r("code",[e._v("__tests__")]),e._v(" subdirectories under "),r("code",[e._v("src")]),e._v(".")]),e._v(" "),r("p",[e._v("To run unit tests:")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" test:unit\n")])])]),r("p",[e._v("Test coverage results are sent to "),r("a",{attrs:{href:"https://app.codecov.io/gh/jshor/symbology",target:"_blank",rel:"noopener noreferrer"}},[e._v("Codecov"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h4",{attrs:{id:"e2e-tests"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#e2e-tests"}},[e._v("#")]),e._v(" e2e tests")]),e._v(" "),r("p",[e._v("e2e tests are specified in the "),r("code",[e._v("test/e2e")]),e._v(" directory. They utilize "),r("a",{attrs:{href:"https://github.com/americanexpress/jest-image-snapshot",target:"_blank",rel:"noopener noreferrer"}},[e._v("jest-image-snapshot"),r("OutboundLink")],1),e._v(" for comparisons of barcode images in tandem with the helper test method, "),r("code",[e._v("createImageFile")]),e._v(".")]),e._v(" "),r("p",[e._v("To run e2e tests:")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" test:e2e\n")])])]),r("h2",{attrs:{id:"committing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#committing"}},[e._v("#")]),e._v(" Committing")]),e._v(" "),r("p",[e._v("Commit message standards abide by "),r("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("standard-changelog")]),r("OutboundLink")],1),e._v(". This module utilizes "),r("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("commitizen")]),r("OutboundLink")],1),e._v(" as a devDependency to help developers write their commits, and commit messages are enforced using "),r("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("commitlint")]),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"versioning"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#versioning"}},[e._v("#")]),e._v(" Versioning")]),e._v(" "),r("p",[e._v("This package abides by the "),r("a",{attrs:{href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("semver standard"),r("OutboundLink")],1),e._v(". "),r("a",{attrs:{href:"https://github.com/conventional-changelog/standard-version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("standard-version")]),r("OutboundLink")],1),e._v(" will automatically update "),r("a",{attrs:{href:"https://github.com/jshor/symbology/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("CHANGELOG.md")]),r("OutboundLink")],1),e._v(" and bump the version.")]),e._v(" "),r("h2",{attrs:{id:"automated-builds-and-ci"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#automated-builds-and-ci"}},[e._v("#")]),e._v(" Automated builds and CI")]),e._v(" "),r("p",[e._v("GitHub Actions will automatically build and test pull requests. At least one admin PR approval and all status checks are required to merge a PR.")]),e._v(" "),r("p",[e._v("The following status checks are implemented:")]),e._v(" "),r("ul",[r("li",[e._v("Successful Windows builds (AppVeyor)")]),e._v(" "),r("li",[e._v("Successful Linux and macOS builds (Travis)")]),e._v(" "),r("li",[e._v("Sufficient code coverage (threshold >90%)")])]),e._v(" "),r("p",[e._v("Upon the successful merge of a PR, CI will create an automated release of the binaries on GitHub (via "),r("a",{attrs:{href:"https://github.com/bchr02/node-pre-gyp-github",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("node-pre-gyp-github")]),r("OutboundLink")],1),e._v("), publish to npm, and push the updated changelog and version bump changes to GitHub.")]),e._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[e._v("Important")]),e._v(" "),r("p",[e._v("The package version is automatically updated. "),r("strong",[e._v("Do not change any version references in this project.")])])]),e._v(" "),r("h2",{attrs:{id:"contributing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#contributing"}},[e._v("#")]),e._v(" Contributing")]),e._v(" "),r("p",[e._v("All constructive feedback and pull request changes are welcome. For more information on contributing to this project, please see the "),r("a",{attrs:{href:"https://github.com/jshor/symbology/blob/master/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Contributing Guidelines"),r("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=s.exports}}]);